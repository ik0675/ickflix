{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Grid","Title","span","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImgContainer","Year","Poster","id","rating","year","isMovie","imgUrl","to","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","original_title","key","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvAPI","topRated","get","airing","detail","append_to_response","search","term","query","encodeURIComponent","movieAPI","HomeContainer","state","data","results","this","setState","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","SearchContainer","e","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","i","name","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b3f98a7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n  margin-top: 15px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ↺\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props =>\n    `https://image.tmdb.org/t/p/w300${props.bgUrl}`});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImgContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Poster = ({ id, title, rating, year, isMovie = false, imgUrl }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImgContainer>\n        <Image bgUrl={imgUrl}>\n          <Rating>\n            <span role=\"img\" aria-label=\"Rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n        </Image>\n      </ImgContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  imgUrl: PropTypes.string.isRequired,\n  isMovie: PropTypes.bool,\n  year: PropTypes.string,\n  rating: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title> Movies | Ickflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title> Movies | Ickflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                title={movie.original_title}\n                key={movie.id}\n                id={movie.id}\n                imgUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map(movie => (\n              <Poster\n                title={movie.original_title}\n                key={movie.id}\n                id={movie.id}\n                imgUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map(movie => (\n              <Poster\n                title={movie.original_title}\n                key={movie.id}\n                id={movie.id}\n                imgUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\n/* Configuration for the instance */\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6cd7c01356b14b1bcfd51b6695e00d32\",\n    language: \"en-US\"\n  }\n});\n\n/* '/' in front of tv will make a path to ab absolute path which will override the baseURL */\n\nexport const tvAPI = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airing: () => api.get(\"tv/airing_today\"),\n  detail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const movieAPI = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  detail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { Component } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieAPI } from \"api\";\n\nexport default class HomeContainer extends Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieAPI.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await movieAPI.upcoming();\n      const {\n        data: { results: popular }\n      } = await movieAPI.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({ error: \"Can't find Movie information\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airing, error, loading }) => (\n  <>\n    <Helmet>\n      <title> TV Shows | Ickflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title> TV Shows | Ickflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                title={show.original_name}\n                key={show.id}\n                id={show.id}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                title={show.original_name}\n                key={show.id}\n                id={show.id}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airing && airing.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airing.map(show => (\n              <Poster\n                title={show.original_name}\n                key={show.id}\n                id={show.id}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airing: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { Component } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"api\";\n\nexport default class TVContainer extends Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airing: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvAPI.topRated();\n      const {\n        data: { results: popular }\n      } = await tvAPI.popular();\n      const {\n        data: { results: airing }\n      } = await tvAPI.airing();\n      this.setState({\n        topRated,\n        popular,\n        airing\n      });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airing, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airing={airing}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title> Search | Ickflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                title={movie.original_title}\n                key={movie.id}\n                id={movie.id}\n                imgUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(tv => (\n              <Poster\n                title={tv.original_name}\n                key={tv.id}\n                id={tv.id}\n                imgUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {movieResults &&\n          tvResults &&\n          movieResults.length === 0 &&\n          tvResults.length === 0 && (\n            <Message color=\"#e74c3c\" text={`Nothing found : ${searchTerm}`} />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { Component } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieAPI, tvAPI } from \"api\";\n\nexport default class SearchContainer extends Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = e => {\n    const {\n      target: { value }\n    } = e;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieAPI.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvAPI.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find search results.\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n/* This is for local styles which will not affect globally */\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid ${props => (props.current ? \"red\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n/* Will give properties of history, location, and match */\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\"> Movies </SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\"> TV </SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\"> Search </SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  opacity: 0.5;\n  filter: blur(3px);\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\n/* Span doesn't have margin */\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.8;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title> Loading | Ickflix </title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {\" \"}\n          {result.original_title\n            ? result.original_title\n            : result.original_name}{\" \"}\n          | Ickflix{\" \"}\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date\n                : result.first_air_date}\n            </Item>\n            <Divider> ∙ </Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider> ∙ </Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, i) =>\n                  i === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React, { Component } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieAPI, tvAPI } from \"../../api\";\n\nexport default class DetailContainer extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n\n    /* Need to chekc whether id is valid (not string) should be a number*/\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieAPI.detail(parseId));\n      } else {\n        ({ data: result } = await tvAPI.detail(parseId));\n      }\n      console.log(result);\n    } catch {\n      this.setState({ error: \"Can't find Detail information \" });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home}></Route>\n      <Route path=\"/tv\" component={TV}></Route>\n      <Route path=\"/search\" component={Search}></Route>\n      <Route path=\"/movie/:id\" component={Detail}></Route>\n      <Route path=\"/show/:id\" component={Detail}></Route>\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\n/* Applied globally */\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}